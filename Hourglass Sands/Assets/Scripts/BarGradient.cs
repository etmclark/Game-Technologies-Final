///code generated by chatgpt, the prompt is "generate a code for the smooth color gradient process in the slider component with max and min value and decrease by time, 
/// with color-change thresholds of 65% and 20%. and play an audio that based on health goes from 20% to 0%,
/// and play another audio file when health goes 65% to 20%,gradually increasing in volume and speed on the first one and increasing volume only on second one."
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.SceneManagement;

public class BarGradient : MonoBehaviour
{
    public Slider Slider1;//  slider UI component
    public Image fillImage;// color-changing fill image of the slider
    public AudioSource audioSourceLow;//heartbeat sound 
    public AudioSource audioSourceMedium;//breath
    //colors
    public Color safe = Color.green;
    public Color meh = Color.yellow;
    public Color danger = Color.gray;
    public static float healthValue; //health

    void Start()
    {
        healthValue = Slider1.maxValue;
        Slider1.value = healthValue; //sync the value 
        UpdateFillColor(Slider1.value);//tract the hp and changing color
    }

    void Update()
    {
        Slider1.value -= Time.deltaTime; //health goes down by sec
        if (Slider1.value < 0)
        {
            Slider1.value = 0; //lock the min health to 0
        }
        healthValue = Slider1.value;
        UpdateFillColor(Slider1.value);
        UpdateAudio(Slider1.value / Slider1.maxValue);
        if (healthValue == 0)//losing state& stop SEF& unlock mouse
        {
            audioSourceLow.Stop(); 
            audioSourceMedium.Stop();
            SceneManager.LoadScene("DeadScene");
            Cursor.lockState = CursorLockMode.None;
            Cursor.visible = true;
        }
    }

    void UpdateFillColor(float value)
    {
        if (fillImage != null)// Check if the fill image is not null
        {
            float percentage = value / Slider1.maxValue;
            // Update the fill color based on key values
            if (percentage > 0.65f)
            {
                fillImage.color = safe;
            }
            else if (percentage > 0.2f)
            {
                fillImage.color = meh;
            }
            else
            {
                fillImage.color = danger;
            }
        }
    }

    void UpdateAudio(float percentage)
    {
        if (audioSourceLow != null && audioSourceMedium != null)// Check sound source are there
        {
            if (percentage > 0.2f && percentage <= 0.65f) //medium health audio 
            {
                float adjustedPercentage = (percentage - 0.2f) / 0.45f; 
                audioSourceMedium.volume = Mathf.Lerp(0.5f, 0.1f, adjustedPercentage); //Volume decreases as health decreases
                audioSourceMedium.pitch = Mathf.Lerp(1.5f, 1f, adjustedPercentage);// Pitch decreases as health decreases

                if (!audioSourceMedium.isPlaying)// Start playing medium health audio if it's not already playing
                {
                    audioSourceMedium.Play();
                }
            }
            else
            {
                audioSourceMedium.volume = 0f;
                audioSourceMedium.Stop();
            }

            if (percentage > 0f && percentage <= 0.2f) //low health audio
            {
                float adjustedPercentage = percentage / 0.2f; 
                audioSourceLow.volume = Mathf.Lerp(0.1f, 0.5f, 1 - adjustedPercentage); //Volume increases as health decreases
                if (!audioSourceLow.isPlaying)// Start playing low health audio if it's not already playing
                {
                    audioSourceLow.Play();
                }
            }
            else
            {
                audioSourceLow.volume = 0f;// Stop low health audio if health is outside the range
                audioSourceLow.Stop();
            }
        }
    }
}